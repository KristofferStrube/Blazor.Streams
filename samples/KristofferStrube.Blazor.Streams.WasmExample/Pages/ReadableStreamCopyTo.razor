@page "/ReadableStreamCopyTo"
@inject IJSInProcessRuntime JSRuntime
@inject HttpClient HttpClient

<PageTitle>Streams - ReadableStream CopyTo</PageTitle>

<h2>Stream copying a ReadableStream</h2>
<code>ReadableStream</code> inherits from the .NET <code>Stream</code> class. This means that we can use the <code>CopyToAsync</code> method to copy the content of it to any other  .NET <code>Stream</code>.
<br />
In this sample we copy a <code>ReadableStream</code> containing an image to a .NET <code>MemoryStream</code> and converts that to its base64 encoding to display it in a img-tag.
<br />
<img src="@imageUrl" style="max-width:100%; max-height:50vh;" />

@code {
    string imageUrl = "";

    protected override async Task OnInitializedAsync()
    {
        using Stream data = await HttpClient.GetStreamAsync("images/mountain.jpg");
        using DotNetStreamReference streamRef = new DotNetStreamReference(stream: data, leaveOpen: false);
        await using IJSInProcessObjectReference jSStreamReference = await JSRuntime.InvokeAsync<IJSInProcessObjectReference>("jSStreamReference", streamRef);
        await using ReadableStreamInProcess readableStream = await ReadableStreamInProcess.CreateAsync(JSRuntime, jSStreamReference);

        using MemoryStream writeStream = new System.IO.MemoryStream();
        await readableStream.CopyToAsync(writeStream);
        imageUrl = "data:image/png;base64," + Convert.ToBase64String(writeStream.ToArray());
    }
}